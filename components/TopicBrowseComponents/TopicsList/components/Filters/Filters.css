@value visualBrown, black50 from "../../../../../css/colors.css";

.filtersWrapper {
  width: 100%;
  background-color: visualBrown;
  box-shadow: inset 0 -1px 1px 0 rgba(0, 0, 0, 0.03);
}

.filters {
  display: flex;
  align-items: center;
}

.textInput::placeholder {
  color: black50;
}

.textInput {
  font-size: 1rem;
  line-height: 1.25rem;
  padding: 10px 17px 12px;
  border: 2px solid #F2EFE7;
  border-radius: 3px;
  width: 345px;
  margin-right: 20px;
}

.select {
  padding-right: 20px;
}

.select:last-child {
  padding-right: 0;
}

/* react-select style tweaks */

.select :global(.Select-control) {
  height: 42px;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.15);
  border-radius: 2px;
  border: none;
  width: 188px;
}

.select :global(.Select-arrow) {
  border-color: black transparent transparent;
  border-width: 7px 7px 1.5px;
  position: relative;
  right: 5px;
}

.sortSelect :global(.Select-control) {
  width: 204px;
}

.sortSelect :global(.Select-menu-outer) {
  width: 204px;
}

.sortValue {
  position: relative;
  top: 5px;
  left: 10px;
}

.sortByText {
  opacity: 0.5;
}

:global(.Select.is-open) :global(.Select-arrow) {
  border-color: transparent transparent black !important;
  border-width: 0 7px 7px !important;
}

:global(.Select-menu-outer) {
  width: 188px;
  box-sizing: content-box;
}

:global(.Select-value-label) {
  position: relative;
  top: 3px;
}

:global(.Select-arrow-zone)::after {
  content: "";
  height: 26px;
  width: 1px;
  opacity: 0.18;
  position: absolute;
  border-left: 1px solid black;
  left: -13px;
  top: 7px;
}
