name: Wisconsin Local to ECR

on:
  workflow_dispatch:
    inputs:
      site_env:
        description: ""
        required: true
        default: "local"
      wordpress_url:
        description: ""
        required: true
        default: "https://dpla.wpengine.com"
      user_base_url:
        description: ""
        required: true
        default: "https://recollectionwisconsin.dp.la"
      pro_base_url:
        description: ""
        required: true
        default: "https://pro.dp.la"
      pss_base_url:
        description: ""
        required: true
        default: "https://dp.la/pssapi"
      local_id: 
        description: ""
        required: true
        default: "wisconsin"
      ga_tracking_id: 
        description: ""
        required: true
        default: "UA-128040088-1"
      omeka_url: 
        description: ""
        required: true
        default: "http://omeka.internal.dp.la"

jobs:
  ecr:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm
      - name: Use Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - name: Set AWS credentials
        if: ${{ !env.ACT }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1    

      - name: Login to Amazon ECR
        if: ${{ !env.ACT }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     cache: 'yarn'
      # - run: yarn run build

      - name: Create and populate constants/env.js
        run: |
          touch constants/env.js
          echo export const SITE_ENV = "${{ github.event.inputs.site_env }}"; >> constants/env.js
          echo export const USER_BASE_URL = "${{ github.event.inputs.user_base_url }}"; >> constants/env.js
          echo export const WORDPRESS_URL = "${{ github.event.inputs.wordpress_url }}"; >> constants/env.js
          echo export const PRO_BASE_URL = "${{ github.event.inputs.pro_base_url }}"; >> constants/env.js
          echo export const PSS_BASE_URL = "${{ github.event.inputs.pss_base_url }}"; >> constants/env.js
          echo export const LOCAL_ID = ""${{ github.event.inputs.local_id }}""; >> constants/env.js
          echo export const gaTrackingId = "${{ github.event.inputs.ga_tracking_id }}"; >> constants/env.js

          echo "cat constants/env.js"
          cat constants/env.js
        shell: bash

      - name: Install Yarn
        run: npm install -g yarn

      - name: Add path 
        run: |
          echo "HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin" >> $GITHUB_PATH
        shell: bash
      
      - name: Build the app 
        env: 
          SITE_ENV: "${{ github.event.inputs.site_env }}"
          LOCAL_ID: "${{ github.event.inputs.local_id }}"
          BASE_URL: "${{ github.event.inputs.base_url }}"
          OMEKA_URL: "${{ github.event.inputs.omeka_url }}"

        run: |
          yarn install
          yarn clean
          yarn build
        shell: bash
      
      - name: Build, tag, and push image to Amazon ECR
        if: ${{ !env.ACT }}
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dpla-local-wisconsin
          IMAGE_TAG: ${{ github.sha }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
        run: |
          docker buildx build \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --platform linux/amd64,linux/arm64 . \
          --push
      

